<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <ws:consumer-config name="Web_Service_Consumer" service="ProductServicePortService" port="ProductServicePortSoap11" serviceAddress="http://localhost:6060/soap/ws" wsdlLocation="http://localhost:6060/soap/ws/products.wsdl" doc:name="Web Service Consumer"/>
    <flow name="getallproducts">
        <ws:consumer config-ref="Web_Service_Consumer" operation="getAllProducts" doc:name="Web Service Consumer"/>
        <dw:transform-message metadata:id="5fb69929-5819-46a6-be95-21f47cbab23b" doc:name="Transform Message">
            <dw:input-payload doc:sample="sample_data\getAllProductsResponse_2.xml"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http//way2learnonline.com/domain
---
payload.ns0#getAllProductsResponse.products.*product map ((product , indexOfProduct) -> {
	brandName: product.brandName,
	description: product.description,
	images: product.images.*image map ((image , indexOfImage) -> image),
	name: product.name,
	offer: {
		offerPrice: product.offer.offerPrice,
		offerValidUntil: product.offer.offerValidUntil
	},
	originalPrice: product.originalPrice,
	productId: product.productId
} as :object {
	class : "com.way2learnonline.Product"
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="getproductsbyname">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http//way2learnonline.com/domain
---
{
	ns0#getProductsByNameRequest: {
		name: inboundProperties."http.query.params".productname as :string
	}
}

]]></dw:set-payload>
        </dw:transform-message>
        <ws:consumer config-ref="Web_Service_Consumer" operation="getProductsByName" doc:name="Web Service Consumer"/>
        <dw:transform-message metadata:id="6744647e-682c-4c77-9ff3-78188cc505a3" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http//way2learnonline.com/domain
---
payload.ns0#getProductsByNameResponse.products.*product map ((product , indexOfProduct) -> {
	brandName: product.brandName,
	description: product.description,
	images: product.images.*image map ((image , indexOfImage) -> image),
	name: product.name,
	offer: {
		offerPrice: product.offer.offerPrice,
		offerValidUntil: product.offer.offerValidUntil
	},
	originalPrice: product.originalPrice,
	productId: product.productId
} as :object {
	class : "com.way2learnonline.Product"
})

]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="addproduct">
        <ws:consumer config-ref="Web_Service_Consumer" operation="addProduct" doc:name="Web Service Consumer"/>
    </flow>
    <flow name="03-consuming-soap-solutionFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/soap/products" doc:name="HTTP"/>
        <choice doc:name="Choice">
            <when expression="message.inboundProperties.'http.query.params'.productname == empty">
                <flow-ref name="getallproducts" doc:name="getallproducts"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <when expression="message.inboundProperties.'http.query.params'.productname!=empty">
                <flow-ref name="getproductsbyname" doc:name="getproductsbyname"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <when expression="message.inboundProperties.'http.method'==POST">
                <flow-ref name="addproduct" doc:name="addproduct"/>
            </when>
            <otherwise>
                <set-payload value="Invalid request!!!" doc:name="Set Payload"/>
            </otherwise>
        </choice>
    </flow>
</mule>
